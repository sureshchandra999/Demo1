//

Adapter Design Pattern::
===========================
The Adapter Design Pattern is a structural pattern that allows incompatible interfaces to work together.
It acts as a bridge between two incompatible interfaces by wrapping an existing class with a new interface.

Adapter: Allows incompatible interfaces to work together by wrapping an existing class with a new interface.

Adapter Design Pattern

    Intent: Convert the interface of a class into another interface that a client expects. Adapter lets classes work together that couldn't otherwise because of incompatible interfaces.
    Also Known As: Wrapper

Components of Adapter Pattern

    Target: This is the interface that the client expects.
    Client: The class that interacts with the target interface.
    Adaptee: The existing class that needs to be adapted to the target interface.
    Adapter: The class that implements the target interface and wraps an instance of the adaptee.

